apiVersion: v1
kind: ConfigMap
metadata:
  namespace: ariel
  name: emgc-config-map-1.0
data:
  sysconfig: |
    [GENERAL]
    SYSTEM_LABEL = $MY_INDEX+EMGC_
    SYSTEM_GROUP = EMG  
    SYSTEM_TYPE  = EMGC 
    VERSION      = T1.0.0 
    OP_ACCOUNT   = emg  
    HOST_NAME    = TBED 
    SYSTEM_STATE = ACTIVE 
    SERVER_ID    = $MY_INDEX+caa54ccc-26b1-4c9a-b230-2e831e96b55
    
    [APPLICATIONS]
    #name   =   where       alarm_level                 msgQkey     msgQkey_2   msgQkey_3   msgQkey_4
    #                   (1:minor, 2:major, 3:critical)
    #-------------------------------------------------------------------------------------------------
    IXPC    =  bin/ixpc        2                        0x75001     NULL        NULL
    STMD    =  bin/stmd        3                        0x75002     NULL        NULL
    SHMD    =  bin/shmd        3                        0x75003     NULL        NULL
    SECURED =  bin/secured     3                        0x75004     NULL        NULL
    DBM     =  bin/dbm         3                        0x75005     NULL        NULL
    BATCHD  =  bin/batchd      3                        0x75006     NULL        NULL
    ACNTIF  =  bin/acntif      3                        0x75007     0x75008     0x75009     0x75010
    RESTIF  =  bin/restif.sh   3                        TOMCAT      NULL        NULL
    OLCD    =  bin/olcd        3                        0x75011     NULL        NULL
    FTPIB   =  bin/ftpib       3                        0x75012     NULL        NULL
    PROVIB  =  bin/provib      3                        0x75013     NULL        NULL
    AUTHIF  =  bin/authif      3                        0x75014     0x75015     NULL
    EMGUIB  =  bin/emguib      3                        0x75016     NULL        NULL
    LOGD    =  bin/logd        3                        0x75017     NULL        NULL
    REPORTD =  bin/reportd     3                        0x75018     NULL        NULL
    SLOADERD =  bin/sloaderd   3                        0x75019     NULL        NULL
    NLOADERD =  bin/nloaderd   3                        0x75020     NULL        NULL
    K8SMGR  =  bin/k8smgr      3                        0x75021     NULL        NULL

    # TOM_PROC_NAME : [APPLICATIONS] name
    # TOM_PROC_BIN  : ps -ef | grep [TOM_PROC_BIN]
    [TOM_PROCESS]
    TOM_PROC_NAME = RESTIF
    TOM_PROC_BIN  = REST_PROV
    
    [MON_PROCESS]
    MON_PROC_NAME = RADIUSD
    MON_PROC_BIN  = radiusd
    
    [SHARED_MEMORY_KEY]
    # ¹üÀ§ 43101 ~ 43200
    #------------------------------
    #   NAME               KEY
    #------------------------------
    SHM_KEEPALIVE       = 0x93101
    SHM_NODE_INFO       = 0x93102
    SHM_LOC_SADB        = 0x93103
    SHM_LOC_SPDB        = 0x93104
    SHM_LOG_LEVEL_INFO  = 0x93105
    SHM_EXT_CONN        = 0x93106
    SHM_OVERLOAD_CTRL   = 0x93107
    SHM_SFDB            = 0x93108
    SHM_NMS_RESEND      = 0x93109
    SHM_SYS_INFO        = 0x93110
    SHM_GTPP_SEQ        = 0x93111
    SHM_TRC_INFO        = 0x93112
    SHM_OVERLOAD_INFO   = 0x93113
    SHM_EMGU_INFO       = 0x93114
    SHM_EMGU_TEST       = 0x93115
    
    # STMD
    SHM_STAT_INFO       = 0x93310
    SHM_TPS_INFO        = 0x93311
    SHM_OAMLOGLEVEL     = 0x93312
    
    # Host Statistics
    SHM_RADIUS_ACCESS_HOST = 0x93320
    
    [STMD_PORT]
    SGI_PORT = bond0
    
    [IXPC_CONFIG]
    NFV_RELOAD_NOTI = SAMD DBM

    [MULTI_PROCESS_INFO]
    NUM_THREAD_SS   = 10
    
    [DB_CONFIG]
    DB_ID = emg
    DB_PWD = emg123
    #1:TCP/IP 2:UNIX 3:IPC 4:Embeded
    CONN_TYPE = 3
    
    [BACKUP_CONFIG]
    BACKUP_DIR = /data/emg/BACKUP/MP
    
    [STAT_REPORT]
    RADIUS   = ON
    TPS      = ON
    PKT_USAGE = ON
    
    [ACCOUNT_INFO]
    CRYPT_KEY = betweenarielnetemgandeffloemgpwd
    USER_PASSWD_EXPIRE_DAY = 90
    USER_PASSWD_ENC = 1
    
    [SYSLOG_KEY]
    KEY1 = rcsga

  EMS_TOPO_ADDR: 192.168.70.143:8000

  # AA (All Active) AS (Active-Standby) SA (Standby-Active)
  AS_MODE: AS
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: ariel
  name: replace-script
data:
  list.txt: |
    /data/sysconfig

  replace.sh: |
    #!/bin/bash
    
    ## check argc
    if [ "$#" -ne 1 ];then
        echo "usage} $0 modify_list.file"
            echo "env(MY_POD_NAME/MY_STATEFUL_SET) must be exist"
            echo "if [\$MY_INDEX=2] then [\$MY_INDEX+7000=>7002 \$MY_INDEX+0x700A=>0x700D \$MY_INDEX+EMGC_=EMGC_2]"
        exit
    fi
    
    ## check file exist
    LIST=$1
    CHK_FILES=`ls $LIST`
    if [[ -z $CHK_FILES ]]; then
            echo "LIST($LIST) not exist"
            exit
    fi
    
    ## check env MY_POD_NAME exist
    MY_POD_NAME=`printenv MY_POD_NAME`
    if [[ -z $MY_POD_NAME ]]; then
            echo "MY_POD_NAME=(null)"
            exit
    else
            echo "==> MY_POD_NAME=($MY_POD_NAME)"
    fi
    
    ## check env MY_STATEFUL_SET exist
    MY_STATEFUL_SET=`printenv MY_STATEFUL_SET`
    if [[ -z $MY_STATEFUL_SET ]]; then
            echo "MY_STATEFUL_SET=(null)"
            exit
    else
            echo "==> MY_STATEFUL_SET=($MY_STATEFUL_SET)"
    fi
    
    ## get MY_INDEX val 
    MY_INDEX=`printf '%s' "${MY_POD_NAME//$MY_STATEFUL_SET-/}"`
    let "MY_INDEX += 1"
    echo "==> MY_INDEX=($MY_INDEX)"
    
    function strcmp ()
    {
        if [ "$1" = "$2" ]; then
                    echo 0;
        elif [ "${1}" '<' "${2}" ]; then
                    echo -1;
            else
            echo 1
            fi
    }
    function strncmp() {
        if [ -z "${3}" -o "${3}" -le "0" ]; then
           return 0
        fi
       
        if [ ${3} -ge ${#1} -a ${3} -ge ${#2} ]; then
           strcmp "$1" "$2"
           return $?
        else
           s1=${1:0:$3}
           s2=${2:0:$3}
           strcmp $s1 $s2
           return $?
        fi
    }
    function check_digit() {
            DIGIT='^[0-9]+$'
            if ! [[ $1 =~ $DIGIT ]] ; then
                    echo -1;
            else
                    echo 0;
            fi
    }
    
    function replace_elem() {
            STR_A=$1
            STR_B="\$MY_INDEX+"
            RES=$(strncmp $STR_A $STR_B 10)
    
            REMAIN_STR=`printf '%s' "${STR_A//$STR_B/}"`
            IS_DIGIT=$(check_digit $REMAIN_STR)
            IS_HEX=$(strncmp $REMAIN_STR 0x 2)
    
            if [ "$RES" = "0" ];then
                    if [ "$IS_DIGIT" = "0" ];then
                            NEW_VAL=`printf '%d' "$((REMAIN_STR + MY_INDEX))"`
                            echo "$NEW_VAL"
                    elif [ "$IS_HEX" = "0" ];then
                            NEW_VAL=`printf '%X' "$((REMAIN_STR + MY_INDEX))"`
                            echo "0x$NEW_VAL"
                    else
                            echo "$REMAIN_STR$MY_INDEX"
                    fi
            else
                    echo "$STR_A"
            fi
    }
    
    function replace_content() {
            rm -f "$1.tmp"
            touch "$1.tmp"
            cat $1 | while read line
            do
                    str_array=($line); count=0
                    for i in ${str_array[@]}
                    do
                            str_array[$count]=$(replace_elem $i)
                            let "count += 1"
                    done
            echo "${str_array[*]}" >> "$1.tmp"
            done
            mv -f "$1.tmp" "$1"
    }
    
    ## read file list
    cat $LIST | while read file
    do
            replace_content $file
            sed -i -e "s/\$MY_POD_NAME/$MY_POD_NAME/g" $file
            sed -i -e "s/\$MY_STATEFUL_SET/$MY_STATEFUL_SET/g" $file
    done

    ## add env to file
    echo export IV_HOME=/ > /data/k8s.env
    echo export SYS_MP_ID=1 >> /data/k8s.env
    MY_SYS_NAME=`grep SYSTEM_LABEL /data/sysconfig | awk '{ print $3}'`
    echo export MY_SYS_NAME=$MY_SYS_NAME >> /data/k8s.env
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: ariel
  name: emgc-init-script
data:
  start.sh: |
    #!/bin/sh
    cp /tmp/data/* /data
    cd /replace_script
    ./replace.sh ./list.txt
